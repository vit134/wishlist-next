{"version":3,"file":"static/webpack/static/development/pages/profile.js.6606c95f4d334ba68221.hot-update.js","sources":["webpack:///./pages/profile/index.js"],"sourcesContent":["import React from 'react';\nimport { wishesRequest } from '../../src/requests';\nimport Link from 'next/link';\nimport { Table } from 'react-bootstrap';\nimport { Image } from '../../src/components/image';\n\nclass ProfilePage extends React.Component {\n  static async getInitialProps ({ req, res }) {\n    let data = {};\n\n    // let props = await super.getInitialProps({ req });\n    if (req.user && req.user._id) {\n      try {\n        const res = await wishesRequest(req.user._id);\n        data = res.data;\n      } catch (e) {\n        data.err = e;\n      }\n    }\n\n    return { wishes: data };\n  }\n\n  render () {\n    const { wishes } = this.props;\n    const { data = [] } = wishes;\n\n    return (\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Название</th>\n            <th>Цена</th>\n            <th>Бронь</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((el, ind) => {\n              return (\n                <tr key={el._id}>\n                  <td>{ind + 1}</td>\n                  <td>\n                    {el.image && (\n                      <span style={{ display: 'inline-block', maxWidth: '40px', marginRight: '10px' }}>\n                        <Image src={el.image} size={50} crop/>\n                      </span>\n                    )}\n                    <Link href={`/wish/${el._id}`} prefetch>{ el.name }</Link>\n                  </td>\n                  <td>{ el.price }</td>\n                  <td>{ el.assigned && el.assigned }</td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </Table>\n    );\n  }\n};\n\nexport default ProfilePage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAiBA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AAKA;;;;;;;;;;;;;AArDA;AACA;AACA;AAEA;;;;;;;AAEA;AACA;;AADA;AACA;;;;;;;AAEA;AACA;;AAGA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAfA;AACA;AAsDA;AAEA;;;;A","sourceRoot":""}