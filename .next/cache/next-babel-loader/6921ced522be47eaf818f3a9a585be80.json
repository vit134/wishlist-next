{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Navbar, NavDropdown, Nav, Container } from 'react-bootstrap';\nimport { LoginDialog } from './components/login-dialog';\nimport { AddWishDialog } from '../add-wish-dialog';\nimport { UserInfo } from './components/user-info';\nconst {\n  Brand,\n  Toggle,\n  Collapse\n} = Navbar;\nconst {\n  Item,\n  Divider\n} = NavDropdown;\nconst {\n  Link\n} = Nav;\nexport const Header = ({\n  isPopupOpen,\n  togglePopup,\n  user,\n  onLogin,\n  onRegistration,\n  onLogout,\n  onAddWish,\n  formErorrs\n}) => {\n  const handleClose = () => togglePopup(false);\n\n  const handleShow = () => togglePopup(true);\n\n  const {\n    0: isAddWishPopupOpen,\n    1: toggleAddWishPopup\n  } = useState(false);\n  return __jsx(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    expand: \"sm\"\n  }, __jsx(Container, null, __jsx(\"a\", {\n    href: \"/\"\n  }, __jsx(Brand, null, \"My Wishlist\")), __jsx(Toggle, {\n    \"aria-controls\": \"basic-navbar-nav\"\n  }), __jsx(Collapse, {\n    id: \"basic-navbar-nav\"\n  }, __jsx(Nav, {\n    className: \"mr-auto\"\n  }, __jsx(Link, {\n    href: \"#home\"\n  }, \"Home\"), __jsx(Link, {\n    href: \"#link\"\n  }, \"Link\"), __jsx(NavDropdown, {\n    title: \"Dropdown\",\n    id: \"basic-nav-dropdown\"\n  }, __jsx(Item, {\n    href: \"#action/3.1\"\n  }, \"Action\"), __jsx(Item, {\n    href: \"#action/3.2\"\n  }, \"Another action\"), __jsx(Item, {\n    href: \"#action/3.3\"\n  }, \"Something\"), __jsx(Divider, null), __jsx(Item, {\n    href: \"#action/3.4\"\n  }, \"Separated link\"))), __jsx(Nav, null, __jsx(UserInfo, {\n    user: user,\n    onOpen: handleShow,\n    onAddWishPopupOpen: () => toggleAddWishPopup(true),\n    onLogout: onLogout\n  })))), __jsx(LoginDialog, {\n    isOpen: isPopupOpen,\n    onLogin: onLogin,\n    onRegistration: onRegistration,\n    formErorrs: formErorrs,\n    onClose: handleClose\n  }), __jsx(AddWishDialog, {\n    isOpen: isAddWishPopupOpen,\n    onClose: () => toggleAddWishPopup(false),\n    onSubmit: onAddWish\n  }));\n};","map":{"version":3,"sources":["/Users/viandryushkov/my/ssr-wishlist/src/components/header/index.js"],"names":["React","useState","Navbar","NavDropdown","Nav","Container","LoginDialog","AddWishDialog","UserInfo","Brand","Toggle","Collapse","Item","Divider","Link","Header","isPopupOpen","togglePopup","user","onLogin","onRegistration","onLogout","onAddWish","formErorrs","handleClose","handleShow","isAddWishPopupOpen","toggleAddWishPopup"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,GAHF,EAIEC,SAJF,QAKO,iBALP;AAMA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,IAA8BT,MAApC;AACA,MAAM;AAAEU,EAAAA,IAAF;AAAQC,EAAAA;AAAR,IAAoBV,WAA1B;AACA,MAAM;AAAEW,EAAAA;AAAF,IAAWV,GAAjB;AAEA,OAAO,MAAMW,MAAM,GAAG,CAAC;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,WAFqB;AAGrBC,EAAAA,IAHqB;AAIrBC,EAAAA,OAJqB;AAKrBC,EAAAA,cALqB;AAMrBC,EAAAA,QANqB;AAOrBC,EAAAA,SAPqB;AAQrBC,EAAAA;AARqB,CAAD,KAShB;AACJ,QAAMC,WAAW,GAAG,MAAMP,WAAW,CAAC,KAAD,CAArC;;AACA,QAAMQ,UAAU,GAAG,MAAMR,WAAW,CAAC,IAAD,CAApC;;AAEA,QAAM;AAAA,OAACS,kBAAD;AAAA,OAAqBC;AAArB,MAA2C1B,QAAQ,CAAC,KAAD,CAAzD;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,MAAX;AAAkB,IAAA,OAAO,EAAC,MAA1B;AAAiC,IAAA,MAAM,EAAC;AAAxC,KACE,MAAC,SAAD,QACE;AAAG,IAAA,IAAI,EAAC;AAAR,KACE,MAAC,KAAD,sBADF,CADF,EAIE,MAAC,MAAD;AAAQ,qBAAc;AAAtB,IAJF,EAKE,MAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,YADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,YAFF,EAGE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAC,UAAnB;AAA8B,IAAA,EAAE,EAAC;AAAjC,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,cADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,sBAFF,EAGE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,iBAHF,EAIE,MAAC,OAAD,OAJF,EAKE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,sBALF,CAHF,CADF,EAYE,MAAC,GAAD,QACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAEiB,IAAhB;AAAsB,IAAA,MAAM,EAAEO,UAA9B;AAA0C,IAAA,kBAAkB,EAAE,MAAME,kBAAkB,CAAC,IAAD,CAAtF;AAA8F,IAAA,QAAQ,EAAEN;AAAxG,IADF,CAZF,CALF,CADF,EAuBE,MAAC,WAAD;AACE,IAAA,MAAM,EAAEL,WADV;AAEE,IAAA,OAAO,EAAEG,OAFX;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,OAAO,EAAEC;AALX,IAvBF,EA6BE,MAAC,aAAD;AACE,IAAA,MAAM,EAAEE,kBADV;AAEE,IAAA,OAAO,EAAE,MAAMC,kBAAkB,CAAC,KAAD,CAFnC;AAGE,IAAA,QAAQ,EAAEL;AAHZ,IA7BF,CADF;AAqCD,CApDM","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Navbar,\n  NavDropdown,\n  Nav,\n  Container\n} from 'react-bootstrap';\nimport { LoginDialog } from './components/login-dialog';\nimport { AddWishDialog } from '../add-wish-dialog';\nimport { UserInfo } from './components/user-info';\n\nconst { Brand, Toggle, Collapse } = Navbar;\nconst { Item, Divider } = NavDropdown;\nconst { Link } = Nav;\n\nexport const Header = ({\n  isPopupOpen,\n  togglePopup,\n  user,\n  onLogin,\n  onRegistration,\n  onLogout,\n  onAddWish,\n  formErorrs\n}) => {\n  const handleClose = () => togglePopup(false);\n  const handleShow = () => togglePopup(true);\n\n  const [isAddWishPopupOpen, toggleAddWishPopup] = useState(false);\n\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand='sm'>\n      <Container>\n        <a href='/'>\n          <Brand>My Wishlist</Brand>\n        </a>\n        <Toggle aria-controls=\"basic-navbar-nav\" />\n        <Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Link href=\"#home\">Home</Link>\n            <Link href=\"#link\">Link</Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <Item href=\"#action/3.1\">Action</Item>\n              <Item href=\"#action/3.2\">Another action</Item>\n              <Item href=\"#action/3.3\">Something</Item>\n              <Divider />\n              <Item href=\"#action/3.4\">Separated link</Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <UserInfo user={user} onOpen={handleShow} onAddWishPopupOpen={() => toggleAddWishPopup(true)} onLogout={onLogout} />\n          </Nav>\n        </Collapse>\n      </Container>\n      <LoginDialog\n        isOpen={isPopupOpen}\n        onLogin={onLogin}\n        onRegistration={onRegistration}\n        formErorrs={formErorrs}\n        onClose={handleClose}/>\n      <AddWishDialog\n        isOpen={isAddWishPopupOpen}\n        onClose={() => toggleAddWishPopup(false)}\n        onSubmit={onAddWish}\n      />\n    </Navbar>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}