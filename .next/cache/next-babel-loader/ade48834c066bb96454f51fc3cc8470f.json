{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Container, Row, Col, Button, Image, Card } from 'react-bootstrap';\nimport { useRouter } from 'next/router';\nimport { wishByIdRequest } from '../../src/requests';\nconst {\n  Title,\n  Body,\n  Img\n} = Card;\n\nconst SingleWishPage = ({\n  wish,\n  user\n}) => {\n  const {\n    data,\n    error\n  } = wish;\n  const router = useRouter();\n\n  if (error) {\n    return __jsx(\"div\", null, \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\");\n  }\n\n  console.log(data);\n  return __jsx(Container, {\n    fluid: true\n  }, __jsx(Row, null, __jsx(Button, {\n    onClick: () => router.back()\n  }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\")), __jsx(Row, null, __jsx(Card, null, __jsx(Body, null, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    xs: 6,\n    md: 4\n  }, __jsx(Img, {\n    src: data.image\n  })), __jsx(Col, null, __jsx(\"div\", null, __jsx(Title, null, data.name)), data.link && __jsx(\"div\", null, __jsx(\"a\", {\n    href: data.link\n  }, \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\")), data.price && __jsx(\"div\", null, \"\\u0426\\u0435\\u043D\\u0430 -\\xA0\", __jsx(CurrencyFormat, {\n    value: data.price,\n    displayType: \"text\",\n    suffix: \" \\u0440\\u0443\\u0431.\"\n  })), user.data && user.data._id === data.userId._id && __jsx(\"div\", null, \"\\u0411\\u0440\\u043E\\u043D\\u044C - \", data.assigned ? data.assigned : 'никто'))))))));\n};\n\nSingleWishPage.getInitialProps = async ({\n  query\n}) => {\n  let data = {};\n  const {\n    id\n  } = query;\n\n  if (id) {\n    try {\n      const res = await wishByIdRequest(id);\n      data = res.data;\n    } catch (e) {\n      data.err = e;\n    }\n  }\n\n  return {\n    wish: data\n  };\n};\n\nexport default SingleWishPage;","map":{"version":3,"sources":["/Users/viandryushkov/my/ssr-wishlist/pages/wish/[id].js"],"names":["React","CurrencyFormat","Container","Row","Col","Button","Image","Card","useRouter","wishByIdRequest","Title","Body","Img","SingleWishPage","wish","user","data","error","router","console","log","back","image","name","link","price","_id","userId","assigned","getInitialProps","query","id","res","e","err"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,IAA7C,QAAyD,iBAAzD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,IAAuBL,IAA7B;;AAEA,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AACzC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBH,IAAxB;AACA,QAAMI,MAAM,GAAGV,SAAS,EAAxB;;AAEA,MAAIS,KAAJ,EAAW;AACT,WACE,kHADF;AAKD;;AAEDE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,SACE,MAAC,SAAD;AAAW,IAAA,KAAK;AAAhB,KACE,MAAC,GAAD,QACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAME,MAAM,CAACG,IAAP;AAAvB,sCADF,CADF,EAIE,MAAC,GAAD,QACE,MAAC,IAAD,QACE,MAAC,IAAD,QACE,MAAC,SAAD,QACE,MAAC,GAAD,QACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE;AAAhB,KACE,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEL,IAAI,CAACM;AAAf,IADF,CADF,EAIE,MAAC,GAAD,QACE,mBACE,MAAC,KAAD,QAASN,IAAI,CAACO,IAAd,CADF,CADF,EAIIP,IAAI,CAACQ,IAAL,IACA,mBACE;AAAG,IAAA,IAAI,EAAGR,IAAI,CAACQ;AAAf,oGADF,CALJ,EASIR,IAAI,CAACS,KAAL,IACA,qDACc,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAET,IAAI,CAACS,KAA5B;AAAmC,IAAA,WAAW,EAAC,MAA/C;AAAsD,IAAA,MAAM,EAAC;AAA7D,IADd,CAVJ,EAcIV,IAAI,CAACC,IAAL,IAAaD,IAAI,CAACC,IAAL,CAAUU,GAAV,KAAkBV,IAAI,CAACW,MAAL,CAAYD,GAA3C,IACA,wDACYV,IAAI,CAACY,QAAL,GAAgBZ,IAAI,CAACY,QAArB,GAAgC,OAD5C,CAfJ,CAJF,CADF,CADF,CADF,CADF,CAJF,CADF;AAyCD,CAvDD;;AAyDAf,cAAc,CAACgB,eAAf,GAAiC,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AACpD,MAAId,IAAI,GAAG,EAAX;AACA,QAAM;AAAEe,IAAAA;AAAF,MAASD,KAAf;;AAEA,MAAIC,EAAJ,EAAQ;AACN,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMvB,eAAe,CAACsB,EAAD,CAAjC;AACAf,MAAAA,IAAI,GAAGgB,GAAG,CAAChB,IAAX;AACD,KAHD,CAGE,OAAOiB,CAAP,EAAU;AACVjB,MAAAA,IAAI,CAACkB,GAAL,GAAWD,CAAX;AACD;AACF;;AAED,SAAO;AAAEnB,IAAAA,IAAI,EAAEE;AAAR,GAAP;AACD,CAdD;;AAgBA,eAAeH,cAAf","sourcesContent":["import React from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Container, Row, Col, Button, Image, Card } from 'react-bootstrap';\nimport { useRouter } from 'next/router';\nimport { wishByIdRequest } from '../../src/requests';\n\nconst { Title, Body, Img } = Card;\n\nconst SingleWishPage = ({ wish, user }) => {\n  const { data, error } = wish;\n  const router = useRouter();\n\n  if (error) {\n    return (\n      <div>\n        Ничего не найдено\n      </div>\n    );\n  }\n\n  console.log(data);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Button onClick={() => router.back()}>Назад</Button>\n      </Row>\n      <Row>\n        <Card>\n          <Body>\n            <Container>\n              <Row>\n                <Col xs={6} md={4}>\n                  <Img src={data.image} />\n                </Col>\n                <Col>\n                  <div>\n                    <Title>{ data.name }</Title>\n                  </div>\n                  { data.link && (\n                    <div>\n                      <a href={ data.link }>Ссылка на магазин</a>\n                    </div>\n                  )}\n                  { data.price && (\n                    <div>\n                      Цена -&nbsp;<CurrencyFormat value={data.price} displayType='text' suffix=' руб.'/>\n                    </div>\n                  )}\n                  { user.data && user.data._id === data.userId._id && (\n                    <div>\n                      Бронь - { data.assigned ? data.assigned : 'никто' }\n                    </div>\n                  )}\n                </Col>\n              </Row>\n            </Container>\n          </Body>\n        </Card>\n      </Row>\n    </Container>\n\n  );\n};\n\nSingleWishPage.getInitialProps = async ({ query }) => {\n  let data = {};\n  const { id } = query;\n\n  if (id) {\n    try {\n      const res = await wishByIdRequest(id);\n      data = res.data;\n    } catch (e) {\n      data.err = e;\n    }\n  }\n\n  return { wish: data };\n};\n\nexport default SingleWishPage;\n"]},"metadata":{},"sourceType":"module"}