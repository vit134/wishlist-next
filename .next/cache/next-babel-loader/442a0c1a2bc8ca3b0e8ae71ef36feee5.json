{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nvar errorMessagesLookup = {\n  UserExistsError: 'Пользователь с данным именем пользователя уже зарегистрирован',\n  MissingUsernameError: 'Имя пользователя не указано'\n};\nexport var RegContent = function RegContent(_ref) {\n  var onSubmit = _ref.onSubmit,\n      _ref$formErorrs = _ref.formErorrs,\n      formErorrs = _ref$formErorrs === void 0 ? {} : _ref$formErorrs;\n  var isUsernameInvalid = formErorrs.UserExistsError || formErorrs.MissingUsernameError;\n  return __jsx(Form, {\n    onSubmit: onSubmit\n  }, __jsx(Form.Group, {\n    controlId: \"login\"\n  }, __jsx(Form.Label, null, \"\\u041B\\u043E\\u0433\\u0438\\u043D\"), __jsx(Form.Control, {\n    isInvalid: isUsernameInvalid,\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"\\u041F\\u0440\\u0438\\u0434\\u0443\\u043C\\u0430\\u0439\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, errorMessagesLookup.UserExistsError || errorMessagesLookup.MissingUsernameError)), __jsx(Form.Group, {\n    controlId: \"email\"\n  }, __jsx(Form.Label, null, \"E-mail\"), __jsx(Form.Control, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"E-mail\"\n  })), __jsx(Form.Group, {\n    controlId: \"password\"\n  }, __jsx(Form.Label, null, \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\"), __jsx(Form.Control, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\"\n  })), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\"\n  }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n};","map":{"version":3,"sources":["/Users/viandryushkov/my/ssr-wishlist/src/components/header/components/login-dialog/components/content/registration.js"],"names":["React","Form","Button","errorMessagesLookup","UserExistsError","MissingUsernameError","RegContent","onSubmit","formErorrs","isUsernameInvalid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AAEA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,eAAe,EAAE,+DADS;AAE1BC,EAAAA,oBAAoB,EAAE;AAFI,CAA5B;AAKA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAmC;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,6BAAtBC,UAAsB;AAAA,MAAtBA,UAAsB,gCAAT,EAAS;AAC3D,MAAMC,iBAAiB,GAAGD,UAAU,CAACJ,eAAX,IAA8BI,UAAU,CAACH,oBAAnE;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAEE;AAAhB,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC;AAAtB,KACE,MAAC,IAAD,CAAM,KAAN,yCADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,SAAS,EAAEE,iBAAzB;AAA4C,IAAA,IAAI,EAAC,MAAjD;AAAwD,IAAA,IAAI,EAAC,UAA7D;AAAwE,IAAA,WAAW,EAAC;AAApF,IAFF,EAGE,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC;AAA5B,KACGN,mBAAmB,CAACC,eAApB,IAAuCD,mBAAmB,CAACE,oBAD9D,CAHF,CADF,EAQE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC;AAAtB,KACE,MAAC,IAAD,CAAM,KAAN,iBADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,IAAI,EAAC,OAAhC;AAAwC,IAAA,WAAW,EAAC;AAApD,IAFF,CARF,EAYE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC;AAAtB,KACE,MAAC,IAAD,CAAM,KAAN,+CADF,EAEE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,IAAI,EAAC,UAAnC;AAA8C,IAAA,WAAW,EAAC;AAA1D,IAFF,CAZF,EAgBE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC;AAA/B,8DAhBF,CADF;AAsBD,CAzBM","sourcesContent":["import React from 'react';\nimport { Form, Button } from 'react-bootstrap';\n\nconst errorMessagesLookup = {\n  UserExistsError: 'Пользователь с данным именем пользователя уже зарегистрирован',\n  MissingUsernameError: 'Имя пользователя не указано'\n};\n\nexport const RegContent = ({ onSubmit, formErorrs = {} }) => {\n  const isUsernameInvalid = formErorrs.UserExistsError || formErorrs.MissingUsernameError;\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Form.Group controlId=\"login\">\n        <Form.Label>Логин</Form.Label>\n        <Form.Control isInvalid={isUsernameInvalid} type=\"text\" name=\"username\" placeholder=\"Придумайте имя пользователя\" />\n        <Form.Control.Feedback type=\"invalid\">\n          {errorMessagesLookup.UserExistsError || errorMessagesLookup.MissingUsernameError}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"email\">\n        <Form.Label>E-mail</Form.Label>\n        <Form.Control type=\"email\" name=\"email\" placeholder=\"E-mail\" />\n      </Form.Group>\n      <Form.Group controlId=\"password\">\n        <Form.Label>Пароль</Form.Label>\n        <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Отправить\n      </Button>\n    </Form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}